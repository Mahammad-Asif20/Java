Java OOP's:

1]Class
   * class is a blueprint or template for creating objects.
   * It defines properties (variables) and behaviors (methods).

 Syntax:
      class ClassName {
    // variables
    // Methods
   }

2]Object:
   * An object is an instance of a class.
   * It represents a real-world entity and has its own state and behavior.

 Creating an Object:
      Car myCar = new Car();  

3]Encapsulation:
   Encapsulation means wrapping the data(variables) inside a class by making them private
   And providing public getter and setter methods to access and modify their values.

4]Inheritance
   * One class can inherit properties and methods of another class.
   * Promotes code reusability .

5]Polymorphism
    *Ability to perform the same action in different ways

Two types:
   1]Compile-time Polymorphism(Method Overloading)
   2]Runtime Polymorphism(Method Overriding)
 
   1]Compile-time Polymorphism(Method Overloading):
       * Method overloading means having the same method name with different parameters. 
       * Based on the number or type of arguments we pass, the appropriate method is called at compile time.

   2]Runtime Polymorphism(Method Overriding):
       * Method Overriding means that when a child class and parent class have the same method signature, 
       * The child class method overrides the parent class method and gets called at runtime.

6]Abstraction
    * Hiding internal details and showing only necessary features.
    * Achieved using abstract classes and interfaces.






























